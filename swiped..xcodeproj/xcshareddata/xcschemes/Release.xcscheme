<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1640"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES"
      buildArchitectures = "Automatic">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "3269A8AF2DC4593200215B83"
               BuildableName = "swiped..app"
               BlueprintName = "swiped."
               ReferencedContainer = "container:swiped..xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "32F6BF862DE01AEB00DE28D5"
               BuildableName = "swiped.UITests.xctest"
               BlueprintName = "swiped.UITests"
               ReferencedContainer = "container:swiped..xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Release"
      selectedDebuggerIdentifier = ""
      selectedLauncherIdentifier = "Xcode.IDEFoundation.Launcher.PosixSpawn"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Type a script or drag a script file from your workspace to insert its path.&#10;# Get the current git commit hash&#10;GIT_COMMIT=$(git rev-parse --short HEAD)&#10;&#10;# Set the commit hash in Info.plist&#10;/usr/libexec/PlistBuddy -c &quot;Set :GitCommitHash $GIT_COMMIT&quot; &quot;${TARGET_BUILD_DIR}/${INFOPLIST_PATH}&quot;&#10;&#10;# If the key doesn&apos;t exist yet, create it&#10;if [ $? -ne 0 ]; then&#10;    /usr/libexec/PlistBuddy -c &quot;Add :GitCommitHash string $GIT_COMMIT&quot; &quot;${TARGET_BUILD_DIR}/${INFOPLIST_PATH}&quot;&#10;fi&#10;if [[ &quot;$(uname -m)&quot; == arm64 ]]; then&#10;    export PATH=&quot;/opt/homebrew/bin:$PATH&quot;&#10;fi&#10;if which sentry-cli &gt;/dev/null; then&#10;export SENTRY_ORG=swiped&#10;export SENTRY_PROJECT=apple-ios&#10;ERROR=$(sentry-cli debug-files upload \&#10;&quot;$DWARF_DSYM_FOLDER_PATH&quot; --force-foreground 2&gt;&amp;1 &gt;/dev/null)&#10;if [ ! $? -eq 0 ]; then&#10;echo &quot;error: sentry-cli - $ERROR&quot;&#10;fi&#10;else&#10;echo &quot;error: sentry-cli not installed, download from https://github.com/getsentry/sentry-cli/releases&quot;&#10;fi&#10;&quot;$WORKSPACE_PATH/../../auto.sh&quot;&#10;&#10;">
            </ActionContent>
         </ExecutionAction>
      </PreActions>
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "3269A8AF2DC4593200215B83"
            BuildableName = "swiped..app"
            BlueprintName = "swiped."
            ReferencedContainer = "container:swiped..xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
      <StoreKitConfigurationFileReference
         identifier = "../../swiped./swiped..storekit">
      </StoreKitConfigurationFileReference>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "3269A8AF2DC4593200215B83"
            BuildableName = "swiped..app"
            BlueprintName = "swiped."
            ReferencedContainer = "container:swiped..xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Type a script or drag a script file from your workspace to insert its path.&#10;# Get the current git commit hash&#10;GIT_COMMIT=$(git rev-parse --short HEAD)&#10;&#10;# Set the commit hash in Info.plist&#10;/usr/libexec/PlistBuddy -c &quot;Set :GitCommitHash $GIT_COMMIT&quot; &quot;${TARGET_BUILD_DIR}/${INFOPLIST_PATH}&quot;&#10;&#10;# If the key doesn&apos;t exist yet, create it&#10;if [ $? -ne 0 ]; then&#10;    /usr/libexec/PlistBuddy -c &quot;Add :GitCommitHash string $GIT_COMMIT&quot; &quot;${TARGET_BUILD_DIR}/${INFOPLIST_PATH}&quot;&#10;fi&#10;if [[ &quot;$(uname -m)&quot; == arm64 ]]; then&#10;    export PATH=&quot;/opt/homebrew/bin:$PATH&quot;&#10;fi&#10;if which sentry-cli &gt;/dev/null; then&#10;export SENTRY_ORG=swiped&#10;export SENTRY_PROJECT=apple-ios&#10;ERROR=$(sentry-cli debug-files upload \&#10;&quot;$DWARF_DSYM_FOLDER_PATH&quot; --force-foreground 2&gt;&amp;1 &gt;/dev/null)&#10;if [ ! $? -eq 0 ]; then&#10;echo &quot;error: sentry-cli - $ERROR&quot;&#10;fi&#10;else&#10;echo &quot;error: sentry-cli not installed, download from https://github.com/getsentry/sentry-cli/releases&quot;&#10;fi&#10;&quot;$WORKSPACE_PATH/../../auto.sh&quot;&#10;&#10;">
            </ActionContent>
         </ExecutionAction>
      </PreActions>
   </ArchiveAction>
</Scheme>
